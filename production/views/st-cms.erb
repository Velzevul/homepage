<a href="/" id="homelink" class="homelink icon-house"></a>

<header class="l-row--large--project--st-cms">
    <div class="l-wrap--full">
      <div class="target--left">
        <div class="target__hit--bottom">
          <h1>Studytube CMS</h1>
          <p>Application for online academy management, Nov 2013.</p>
        </div>
      </div>
    </div>
</header>

<section class="l-row">
    <div class="l-wrap">
      <div class="grid">
        <div class="grid__item one--half">
          <h3>Responsibilities</h3>
          <p>Interaction design, <br>UI Prototyping, <br>Front-end development</p>
        </div><!--
        --><div class="grid__item one--half">
          <h3>Technologies used</h3>
          <p>Balsamiq, HTML, SASS, <br>SMACSS, JQuery, EmberJS</p>
        </div>
      </div>
    </div>
</section>

<section class="l-row">
  <h2>Challenges</h2>

  <div class="separator">
    <i class="separator__icon icon-flag"></i>
  </div>

  <div class="l-wrap">
    <p>Creating structure for this complex multi-feature system has been one of the hardest challenges I've had so far. The purpose of this "administration system" is to allow customers to create and manage courses and content, manage users, distribute tasks across their teammates, and track statistics. </p>
    <p>Also, such a compex system was a perfect opportunity to get practice with one of the client-side MVC frameworks, and my choice fell upon the EmberJS.</p>
  </div>
</section>

<section class="l-row">
  <h2>What did I learn</h2>

  <div class="separator">
    <i class="separator__icon icon-checkmark"></i>
  </div>

  <div class="l-wrap">
    <p>The project was a great lesson in interaction design. After many attempts to get the complex structure in one navigation I decided to take the opposite approach: instead of trying to answer question "Which functionality the application offers to a user" I started to think about "Which actions/functionality users from different groups might need on each specific page". By relating different user roles to the core features, I could separate the latter in couple of groups which later formed the parts of the new system. This resulted in decoupled application structure with different modules for managers, editors, and administrators.</p>
    <p>Another experience I got was experience of prototyping with tools like Balsamiq. Mocking new ideas allowed me to test and get feedback on new UI design concepts from our content editing team without spending time on design and development.</p>
    <p>Last but not least, I dipped into the concept of client-side MVC and got some experience with the EmberJS framework. Taking some tasks from server side to a client (routing and view rendering to be more specific) made a huge impact on the overall response speed of the system. Apart from that, I got some experience of working with javascript promises and JSON APIs. Of course, many things in EmberJS are still not very clear to me, but that was a nice experience.</p>
  </div>

  <div class="l-wrap is-center-aligned">
    <p>Next project: &nbsp;<a href="/project/studytube-website">Studytube Website</a></p>
  </div>
</section>

<footer class="l-wrap footer">
  &copy; Volodymyr Dziubak, 2014
</footer>